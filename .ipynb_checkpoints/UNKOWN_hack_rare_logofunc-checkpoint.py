# -*- coding: utf-8 -*-
"""Hack_Rare_LoGoFunc.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yAYeoahYGEcdNjpPDvo63nFF3qRMw2K1
"""

import pandas as pd

# 1. Load your spreadsheet or CSV
# Example: If it's an Excel file, use pd.read_excel
df = pd.read_excel("Hack_Rare_DataSet.xlsx") # Removed extra space at the beginning of this line
# Or if it's a CSV:
# df = pd.read_csv("my_data.csv")

# For demonstration, let's make a sample DataFrame:
#df = pd.DataFrame({
    #"GENE":  ["AAAS", "AAAS", "AAGAB", "AAGAB", "AARS", "AARS", "ABCA1", "ABCA1"],
  #  "LABEL": ["LOF",  "GOF",  "LOF",   "LOF",   "LOF",  "GOF",  "LOF",   "GOF"],
   # "Vector":[None,   None,    None,    None,    None,   None,   None,    None]
#})

#print("Before:")
#print(df)

# 2. Define a function to map LABEL -> vector
def label_to_vector(label):
    if label == "LOF":
        return [1, 0, 0, 1]
    elif label == "GOF":
        return [0, 1, 0, 1]
    else:
        # If there's a possibility of another label, define a default
        return [0, 0, 0, 0]

# 3. Apply the function to fill the 'Vector' column
df["Vector"] = df["LABEL"].apply(label_to_vector)

print("\nAfter:")
print(df)

# 4. (Optional) Save to file if desired
df.to_excel("Hack_Rare_DataSet_updated.xlsx", index=False) # Removed extra space at the beginning of this line
# df.to_csv("my_data_updated.csv", index=False)